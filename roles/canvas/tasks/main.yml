#1 pre-installation
- name: Create User for Canvas
  user:
    name: canvas
    shell: /usr/sbin/nologin

- name: rm -rf /data/wwwroot/canvas for second installation
  shell: rm -rf /data/wwwroot/canvas
  
- name: Download Knowage, it have 2G, need 10 minutes
  unarchive:
    src: "{{canvas_download_url}}"
    dest: "/data/wwwroot"
    remote_src: yes
    mode: 0750
    
- name: Rename dir name
  shell: cd /data/wwwroot; if [ ! -d "canvas" ]; then mv *instructure-canvas-lms* canvas; fi

#2 install dependencies by OS_family
- name: Install this role on {{ansible_os_family}}
  include: "{{ansible_os_family}}.yml"

#3 install Canvas
- name: Install Canvas dependencies and rename configuration file
  shell: |
    bundle install
    yarn install --pure-lockfile
    yarn install --pure-lockfile
    for config in amazon_s3 delayed_jobs domain cache_store redis file_store outgoing_mail security external_migration; \
          do cp -v config/$config.yml.example config/$config.yml; done
    cp config/dynamic_settings.yml.example config/dynamic_settings.yml
    cp config/database.yml.example config/database.yml
  args:
    chdir: /data/wwwroot/canvas
    
- name: Set database connection
  shell: |
  
- name: Createdb and connect Redis for canvas when connection successful
  shell: |
    createdb canvas_production
    bundle exec rails db:initial_setup
    echo -e "development:\n  cache_store: redis_store" > config/cache_store.yml
    echo -e "development:\n  servers:\n  - redis://localhost" > config/redis.yml
  args:
    chdir: /data/wwwroot/canvas

# set soft link, -f enforce the exist links
# ln -sf src des
#- name: set soft link
#  shell: |
    

# Check version,
# must use sudo sh -c to solve the no-root permission
#- block:
#  - name: Check Canvas Version
#    shell: sudo sh -c " 1>> /data/logs/install_version.txt"


# check service state
- name: Check Canvas Service
  shell: systemctl status canvas | grep Active*
  register: check_canvas_service
  notify: check_canvas_service
