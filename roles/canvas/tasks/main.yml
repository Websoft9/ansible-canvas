#1 pre-installation
- name: Create User for Canvas
  user:
    name: canvas
    shell: /usr/sbin/nologin
    
- name: rm -rf /data/wwwroot/canvas for second installation
  shell: rm -rf /data/wwwroot/canvas
  
- name: Download canvas
  unarchive:
    src: "{{canvas_download_url}}"
    dest: "/data/wwwroot"
    remote_src: yes
    mode: 0750
    
- name: Rename dir name
  shell: cd /data/wwwroot; if [ ! -d "canvas" ]; then mv *instructure-canvas-lms* canvas; fi

- name: Create postgresql_user:canvas and Build postgresql_database:canvas_production
  shell: | 
    chown -R canvas:postgres /data/wwwroot/canvas
    sudo -u postgres createuser canvas --no-createdb --no-superuser --no-createrole --pwprompt
    sudo -u postgres createdb canvas_production --owner=canvas
    sudo -u postgres createuser $USER
    sudo -u postgres psql -c "alter user $USER with superuser" postgres

#2 install dependencies by OS_family
- name: Install this role on {{ansible_os_family}}
  include: "{{ansible_os_family}}.yml"

#3 install Canvas
- name: Install Canvas dependencies and rename configuration file
  shell: |
    bundle install
    for config in amazon_s3 database \
    delayed_jobs domain file_store outgoing_mail security external_migration; \
    do cp config/$config.yml.example config/$config.yml; done
    cp config/dynamic_settings.yml.example config/dynamic_settings.yml
    cp config/database.yml.example config/database.yml
    cp config/outgoing_mail.yml.example config/outgoing_mail.yml
    cp config/domain.yml.example config/domain.yml
    cp config/security.yml.example config/security.yml
  args:
    chdir: /data/wwwroot/canvas

- name: Create canvas assets 
  shell: |
    mkdir -p log tmp/pids public/assets app/stylesheets/brandable_css_brands
    touch app/stylesheets/_brandable_variables_defaults_autogenerated.scss
    touch Gemfile.lock
    touch log/production.log
    sudo chown -R canvas config/environment.rb log tmp public/assets \
    app/stylesheets/_brandable_variables_defaults_autogenerated.scss \
    app/stylesheets/brandable_css_brands Gemfile.lock config.ru
  args:
    chdir: /data/wwwroot/canvas
    
- name: Set database connection
  shell: |
    sed -i '18,25s/password: your_password/password: 123456/' /data/wwwroot/canvas/config/database.yml
    

#  postgresql creatdb command need su to postgres
- name: Createdb and connect Redis for canvas when connection successful
  shell: |
    yarn install
    RAILS_ENV=production bundle exec rake canvas:compile_assets
    RAILS_ENV=production bundle exec rake db:initial_setup
    sudo adduser --disabled-password --gecos canvas canvasuser
    sudo chmod 400 config/*.yml
  args:
    chdir: /data/wwwroot/canvas




# set soft link, -f enforce the exist links
# ln -sf src des
#- name: set soft link
#  shell: |
    

# Check version,
# must use sudo sh -c to solve the no-root permission
#- block:
#  - name: Check Canvas Version
#    shell: sudo sh -c " 1>> /data/logs/install_version.txt"


# check service state
- name: Check Canvas Service
  shell: systemctl status canvas | grep Active*
  register: check_canvas_service
  notify: check_canvas_service
